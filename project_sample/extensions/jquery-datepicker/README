
Using the jQuery ui-datepicker
==============================

This extension includes everything that you need to to incorporate the jQuery ui-datepicker into the event editing form for django-schedule. The procedure is slightly different if you are using django-schedule within Pinax, so both of these situations are documented here. It is useful to understand the difference when using Pinax, so you will need to read this entire file whether or not you ae using Pinax.

Overview of the media files and the template
--------------------------------------------

The media that you will need to install in your MEDIA_ROOT (which is named "site_media" for the project_sample to match the convention used in Pinax) includes:

jquery.js (this will already be installed for Pinax)
jquery-ui-datepicker.js
jquery-ui-themeroller.css (this is optional and can be replaced as discussed below.)
images directory and its' content (which is used by the themeroller).

You have to replace the template within the schedule directory named "event_form_base.html" with one of the versions that is provided in this directory. For pinax, use the version in the "pinax" directory, otherwise use the version in the "stand-alone" directory.

About jquery.js
---------------

This is the core jQuery bundle. The version provided here is precisely the same version that is included with Pinax 0.5. It is a packed version of jQuery 1.2.6.

The "event_form_base.html" template for Pinax does not load this file since it is already loaded by the Pinax "base.html" template. If your non-Pinax app loads jquery.js for all pages in the same manner as Pinax, then you will similarly need to delete the line that loads jquery.js from the "event_form_base.html" template.

Note that the template defines a "ready function" that hooks up the start_0, end_0 and end_recurring_period_0 form fields to the datepicker. It is imperative that this ready function is defined after jquery is loaded. Since in Pinax jquery is loaded near the end of the body, this ready function must be defined in the "extra_body" block instead of the "extra_head" block as is done for the stand-alone case. If your non-Pinax app also loads jquery, then you may need to make a similar adjustment to your template structure.

About jquery-ui.datepicker.js
-----------------------------

This is a minimized subset of the jquery-ui package that includes the minimum code necessary for the internationalized datepicker. If you are already loading the full jquery-ui package in your pages, then you do not need to load this file.

This file was created by creating a personalized version of the jquery-ui library. If you wish, you can create your own version of this file or use the full jquery-ui library. See  http://ui.jquery.com/ for more information.

About jquery-ui-themeroller
---------------------------

I used the http://ui.jquery.com/themeroller website to select a theme that fit in well with the colors that I chose for my other django-schedule elements. I downloaded the selected zip file which, when unpacked, included the "jquery-ui-temeroller.css" file and the "images" directory. As far as I can tell, the "images" subdirectory needs to be in the same subdirectory as the css file, so keep that in mind if you decide to move  things around in your media area.

Of course you can use the themeroller site to select some other look-and-feel for your datepicker or even leave out the themeroller stuff and instead define your own css to control the look of the datepicker.

END OF DOCUMENT

